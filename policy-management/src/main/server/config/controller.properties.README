#
# *-controller.properties configuration
#
#
# The <controller-name>-controller.properties file define the
# configuration aspects of a give controller at initialization time.
#
# It contains 3 major sections:
#
# 1. CONTROLLER
# 2. DMAAP
# 4. UEB
# 5. DROOLS
#
# 1. CONTROLLER
#
# controller.name: controller unique name identifier.
#
# 2. DMAAP:
#    2.1. DMAAP Sources Information
#         2.1.1. Topics that this controller supports over DMAAP.
#         2.1.1. DMAAP Network Information for each topic.
#         2.1.2. Decoders information for each topic to map network input to
#                an object that will be injected into its appropriate drools
#                sessions.
#         2.1.3. Filtering information for each decoder, to filter out from
#                drools, messages that should not be processed. 
#    2.2. DMAAP Sinks Information
#         2.2.1. Topics that this controller supports over DMAAP.
#         2.2.2. DMAAP Network Information for each topic.
#         2.2.3. Encoders information for each topic to map a model object
#                to serialize network output that will be send over the 
#                appropriate DMAAP topic according to its network information.
#
# 2.1 DMAAP Sources
#
# dmaap.source.topics:  comma separated list of DMAAP topics source of events.
# dmaap.source.topics.<aTopic>.servers:  comma separated list of DMAAP servers to poll for events.
# [optional] dmaap.source.topics.<aTopic>.apiKey=<APIKEY>  : api key       
# [optional] dmaap.source.topics.<aTopic>.apiSecret=<APISECRET>  : api secret
# [optional] dmaap.source.topics.<aTopic>.consumerGroup=<CONSUMER-GROUP> : consumer group
# [optional] dmaap.source.topics.<aTopic>.consumerInstance=<CONSUMER-INSTANCE>  : consumer instance
# dmaap.source.topics.<aTopic>.events:  comma separated list of classes to which an event can be mapped to,
#    where <aTopic> must be declared in dmaap.source.topics
# [optional] dmaap.source.topics.<aTopic>.events.<eventClass>.filter:  comma separated list of conditions in the form of 
#      pairs of "<field-name>=<field-value-regex>" values, where <field-name> identifies a field of the event, and
#      <field-value-regex> is a regular expression that that field's value in the event must match
#      against each particular instantiation of the event for this controller.   Note that multiple 
#      "<field-name>=<field-value-regex>" are evaluated for acceptance by AND'ing each condition.
#      Further, <aTopic> must be declared in dmaap.source.topics, and 
#      <eventClass> in dmaap.source.topics.<aTopic>.events.
# [optional] dmaap.source.topics.<aTopic>.events.custom.gson:  comma separated pair, where the first item
#      is a class in the model that contains a gson parser, and the second is the actual gson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
# [optional] dmaap.source.topics.<aTopic>.events.custom.jackson:  comma separated pair, where the first item
#      is a class in the model that contains a jackson parser, and the second is the actual jackson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
#
# 2.2 DMAAP Sinks
#
# dmaap.sink.topics:  comma separated list of DMAAP topics destination of locally produced events.
# dmaap.sink.topics.<aTopic>.servers:  comma separated list of DMAAP servers to send events.
# [optional] dmaap.sink.topics.<aTopic>.apiKey=<API-KEY>  : api key       
# [optional] dmaap.sink.topics.<aTopic>.apiSecret=<API-SECRET>  : api secret
# [optional] dmaap.sink.topics.<aTopic>.partitionKey=<PARTITIONKEY> : partition key
# dmaap.sink.topics.<aTopic>.events:  comma separated list of classes to which an event can be mapped to,
#    where <aTopic> must be declared in dmaap.sink.topics
# [optional] dmaap.sink.topics.<aTopic>.events.custom.gson:  comma separated pair, where the first item
#      is a class in the model that contains a gson parser, and the second is the actual gson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
# [optional] dmaap.sink.topics.<aTopic>.events.custom.jackson:  comma separated pair, where the first item
#      is a class in the model that contains a jackson parser, and the second is the actual jackson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
#
# 2. UEB:
#    2.1. UEB Sources Information
#         2.1.1. Topics that this controller supports over UEB.
#         2.1.1. UEB Network Information for each topic.
#         2.1.2. Decoders information for each topic to map network input to
#                an object that will be injected into its appropriate drools
#                sessions.
#         2.1.3. Filtering information for each decoder, to filter out from
#                drools, messages that should not be processed. 
#    2.2. UEB Sinks Information
#         2.2.1. Topics that this controller supports over UEB.
#         2.2.2. UEB Network Information for each topic.
#         2.2.3. Encoders information for each topic to map a model object
#                to serialize network output that will be send over the 
#                appropriate UEB topic according to its network information.
#
#
# 2.1 UEB Sources
#
# ueb.source.topics:  comma separated list of UEB topics source of events.
# ueb.source.topics.<aTopic>.servers:  comma separated list of UEB servers to poll for events.
# [optional] ueb.source.topics.<aTopic>.apiKey=<API-KEY>  : api key       
# [optional] ueb.source.topics.<aTopic>.apiSecret=<API-SECRET>  : api secret
# [optional] ueb.source.topics.<aTopic>.consumerGroup=<CONSUMER-GROUP> : consumer group
# [optional] ueb.source.topics.<aTopic>.consumerInstance=<CONSUMER-INSTANCE>  : consumer instance
# ueb.source.topics.<aTopic>.events:  comma separated list of classes to which an event can be mapped to,
#    where <aTopic> must be declared in ueb.source.topics
# ueb.source.topics.<aTopic>.events.<eventClass>.filter:  comma separated list of conditions in the form of 
#      pairs of "<field-name>=<field-value-regex>" values, where <field-name> identifies a field of the event, and
#      <field-value-regex> is a regular expression that that field's value in the event must match
#      against each particular instantiation of the event for this controller.   Note that multiple 
#      "<field-name>=<field-value-regex>" are evaluated for acceptance by AND'ing each condition.
#      Further, <aTopic> must be declared in ueb.source.topics, and 
#      <eventClass> in ueb.source.topics.<aTopic>.events
# ueb.source.topics.<aTopic>.events:  comma separated list of classes to which an event can be mapped to,
#    where <aTopic> must be declared in dmaap.source.topics
# [optional] ueb.source.topics.<aTopic>.events.<eventClass>.filter:  comma separated list of conditions in the form of 
#      pairs of "<field-name>=<field-value-regex>" values, where <field-name> identifies a field of the event, and
#      <field-value-regex> is a regular expression that that field's value in the event must match
#      against each particular instantiation of the event for this controller.   Note that multiple 
#      "<field-name>=<field-value-regex>" are evaluated for acceptance by AND'ing each condition.
#      Further, <aTopic> must be declared in dmaap.source.topics, and 
#      <eventClass> in dmaap.source.topics.<aTopic>.events.
# [optional] ueb.source.topics.<aTopic>.events.custom.gson:  comma separated pair, where the first item
#      is a class in the model that contains a gson parser, and the second is the actual gson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
# [optional] ueb.source.topics.<aTopic>.events.custom.jackson:  comma separated pair, where the first item
#      is a class in the model that contains a jackson parser, and the second is the actual jackson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
#
# 2.1 UEB Sinks
#
# ueb.sink.topics:  comma separated list of UEB topics destination of locally produced events.
# ueb.sink.topics.<aTopic>.servers:  comma separated list of UEB servers to send events.
# [optional] ueb.sink.topics.<aTopic>.apiKey=<APIKEY>  : api key       
# [optional] ueb.sink.topics.<aTopic>.apiSecret=<APISECRET>  : api secret
# [optional] ueb.sink.topics.<aTopic>.partitionKey=<PARTITIONKEY> : partition key
# ueb.sink.topics.<aTopic>.events:  comma separated list of classes to which an event can be mapped to,
#    where <aTopic> must be declared in ueb.sink.topics
# [optional] ueb.sink.topics.<aTopic>.events.custom.gson:  comma separated pair, where the first item
#      is a class in the model that contains a gson parser, and the second is the actual gson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
# [optional] ueb.sink.topics.<aTopic>.events.custom.jackson:  comma separated pair, where the first item
#      is a class in the model that contains a jackson parser, and the second is the actual jackson parser in
#      the class.   This setting overrides the PDP-D generic framework parsers with an specific model
#      provided one
#
# 3. DROOLS (Maven Group Coordinates):
# 
# rules.groupId: maven group id of rules jar file
# rules.artifactId: maven artifact id of rules jar file
# rules.version: comma separated list of versions supported and detected that include the drl.
