{
  "comments": [
    {
      "key": {
        "uuid": "b9e73fd1_3248717d",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/controller/DroolsControllerFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 321,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-18T19:26:05Z",
      "side": 1,
      "message": "I think the class \u003c-\u003e filter mapping is 1 to 1, is this correct and is there a reason to keep the list?",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8058f532_12c75ba5",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/controller/DroolsControllerFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 321,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-02-19T18:56:25Z",
      "side": 1,
      "message": "I was thinking along the lines of every event class can have its own filter. So if you had a property like \"topic.events\u003dorg.foo,org.bar\" you could have \"topic.org.foo.filter\u003d...\" and/or \"topic.org.bar.filter\u003d...\". I don\u0027t have any issues with making a class agnostic filter per topic and getting rid of the list if that is preferred.",
      "parentUuid": "b9e73fd1_3248717d",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f6482fb_3b07a9b0",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/controller/DroolsControllerFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 321,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-19T19:42:29Z",
      "side": 1,
      "message": "What you have is good Daniel, I misread, the 1\u003c-\u003e0,1 mapping from class to filter is preserved.  No comment.",
      "parentUuid": "8058f532_12c75ba5",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ab6b2ea_44a8f9c6",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-18T19:26:05Z",
      "side": 1,
      "message": "I think here if an expression is not path means that everything passes through, not sure if you can default it to a this.rule\" that takes everything.",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a06522bd_382a5578",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-02-19T22:49:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ab6b2ea_44a8f9c6",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b45c3641_7141c496",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-18T19:26:05Z",
      "side": 1,
      "message": "not sure if this is needed and could get by just with setRule only.",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9bfe1b19_0a3455e9",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 90,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-02-19T22:49:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b45c3641_7141c496",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8393eb31_44abc5eb",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-18T19:26:05Z",
      "side": 1,
      "message": "I think this method can call the one below with \n\nfilter(json, this.rule) and can remove the body of this method to reuse the code.",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae734b0b_693bcd06",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-02-19T22:49:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8393eb31_44abc5eb",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b02d317b_62e62f4b",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-18T19:26:05Z",
      "side": 1,
      "message": "could this.rule be empty here per allowing in the constructor and deleteRule?",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15692e68_2c220744",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-02-19T22:49:46Z",
      "side": 1,
      "message": "Updated the constructor and setRule() to set the rule to match anything if nothing is passed in so this is no longer an issue.",
      "parentUuid": "b02d317b_62e62f4b",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55f953ba_2ca69527",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-18T19:26:05Z",
      "side": 1,
      "message": "can expression be null?",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ee587c7_00e2c724",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-02-19T18:56:25Z",
      "side": 1,
      "message": "Yes it can. The original intent was that if there are no rules then there\u0027s no need to call any filtering. I originally thought there was a check within the ProtocolCoderToolSet filter() method that checks if there are rules and if there\u0027s none then it skips the filter. However, after rechecking per your comments the hasRules() check is for deciding to return the first decoder. I\u0027ll update the constructors to add a \".*\" match.",
      "parentUuid": "55f953ba_2ca69527",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46a0ad93_cae8c28e",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-02-19T19:12:51Z",
      "side": 1,
      "message": "or just return true if expression \u003d\u003d null\n\ncould do that at the top of the method and avoid using jsonpath altogether in that case",
      "parentUuid": "8ee587c7_00e2c724",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f43467bf_8ada7f33",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-19T20:01:41Z",
      "side": 1,
      "message": "I agree that checking the expression \u003d\u003d null is good here since this is static method can be called from anywhere with an any arbitrary \"expression\" including null.\n\nStill for your consideration, could have \".*\" in the constructor too, and do another check for it before invoking jsonpath library as well.    The nice thing of always having a value attached to the jsonprotocolfilter regardless (in this case the \".*\" matches-all-wildcard) is that you don\u0027t have to do any checks for null and may simplify a little the code.  Not sure if in this case how much is the saving so it is for your consideration.",
      "parentUuid": "46a0ad93_cae8c28e",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3793bf2c_16d5dc2d",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-02-19T21:54:45Z",
      "side": 1,
      "message": "that\u0027s fine with me, too, though obviously not as efficient.  In that case, I assume we\u0027d just let java throw NPE if expression\u003dnull (which is pretty standard)",
      "parentUuid": "f43467bf_8ada7f33",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e57affd_d6636764",
        "filename": "policy-management/src/main/java/org/onap/policy/drools/protocol/coders/JsonProtocolFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1677
      },
      "writtenOn": "2019-02-19T22:49:46Z",
      "side": 1,
      "message": "The constructor (except for the default constructor for serialization) and setRule() now ensure that the rule is never null and checks for json and expression were added to the static method to ensure other areas of the code base that invoke this method do not misuse it.",
      "parentUuid": "3793bf2c_16d5dc2d",
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ccb7ef8_d5411faa",
        "filename": "pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 57
      },
      "writtenOn": "2019-02-18T16:13:06Z",
      "side": 1,
      "message": "Has this been checked for CVE or Sonatype issues?",
      "range": {
        "startLine": 125,
        "startChar": 13,
        "endLine": 129,
        "endChar": 24
      },
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f483c39_80a678ba",
        "filename": "pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-02-18T16:31:55Z",
      "side": 1,
      "message": "I think we are good with this library, I looked at it in the past (and I\u0027ve been in closed contact with Daniel for this work).  The library is used by several ONAP components, including DCAE, and AAI. and there\u0027s no violations in Nexus IQ for those components.",
      "parentUuid": "0ccb7ef8_d5411faa",
      "range": {
        "startLine": 125,
        "startChar": 13,
        "endLine": 129,
        "endChar": 24
      },
      "revId": "3c3353d9b8d62020d3a613c2a410da1a12641f9c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}