{
  "comments": [
    {
      "key": {
        "uuid": "0de1db21_a791c405",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Keyword.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-23T23:15:28Z",
      "side": 1,
      "message": "@Ralph, there is a chance where last could be null. I am not sure what the logic will be for if last is null case...",
      "range": {
        "startLine": 281,
        "startChar": 1,
        "endLine": 284,
        "endChar": 9
      },
      "revId": "cccc70972768c699e2e240489831d8744aded87e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dcd34f5_beb6b6e4",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Keyword.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-06-24T11:36:25Z",
      "side": 1,
      "message": "It seems to me that on line 242, \u0027sequence.split(...)\u0027 will always return at least one entry, so there will be at least one attempt to go through the loop. If it then makes it out of the loop without returning (or an exception), \u0027current\u0027 and \u0027last\u0027 will both be set to non-null values. In any case, this test doesn\u0027t hurt, and probably makes Sonar happy.",
      "parentUuid": "0de1db21_a791c405",
      "range": {
        "startLine": 281,
        "startChar": 1,
        "endLine": 284,
        "endChar": 9
      },
      "revId": "cccc70972768c699e2e240489831d8744aded87e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d709a9a7_41ded22f",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Keyword.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T11:51:43Z",
      "side": 1,
      "message": "thx",
      "parentUuid": "8dcd34f5_beb6b6e4",
      "range": {
        "startLine": 281,
        "startChar": 1,
        "endLine": 284,
        "endChar": 9
      },
      "revId": "cccc70972768c699e2e240489831d8744aded87e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e1f4a62_b4be7554",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Keyword.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-06-24T13:56:11Z",
      "side": 1,
      "message": "I\u0027m OK with this either way.  We could just mark the original line as \"NOSONAR\" and add Ralph\u0027s comment, or leave it as Taka has changed it, the downside being that sonar coverage will now complain that only one branch of the \"if\" test is covered since that\u0027s the only branch that can ever actually be covered.",
      "parentUuid": "d709a9a7_41ded22f",
      "range": {
        "startLine": 281,
        "startChar": 1,
        "endLine": 284,
        "endChar": 9
      },
      "revId": "cccc70972768c699e2e240489831d8744aded87e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b01ee420_acd0dea5",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Keyword.java",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-25T18:55:20Z",
      "side": 1,
      "message": "added NOSONAR comment",
      "parentUuid": "3e1f4a62_b4be7554",
      "range": {
        "startLine": 281,
        "startChar": 1,
        "endLine": 284,
        "endChar": 9
      },
      "revId": "cccc70972768c699e2e240489831d8744aded87e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}