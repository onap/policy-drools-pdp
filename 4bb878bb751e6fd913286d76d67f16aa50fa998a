{
  "comments": [
    {
      "key": {
        "uuid": "eb602105_1876149f",
        "filename": "feature-server-pool/config/TestController-controller.properties",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "This file seems for dev. testing, remove.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e19a0a89_43e15927",
        "filename": "feature-server-pool/config/TestController-controller.properties",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "or move to a test directory that isn\u0027t included in a production jar",
      "parentUuid": "eb602105_1876149f",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d668f54_487ae7db",
        "filename": "feature-server-pool/src/main/feature/config/feature-server-pool.properties",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "Need license headers- general comment.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cc70012_ef465119",
        "filename": "feature-server-pool/src/main/feature/config/feature-server-pool.properties",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "Should use ${env.VARX} instead of ${{VARX}}.   For installs should provide a feature-server-pool.conf.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34471e46_61b32999",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "this file is huge - let\u0027s refactor it into several different classes",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bfbeaf3_f0cb7218",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "In general, prefer to use javadoc comments for fields, though this is not hard and fast.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04dc8632_a09a3694",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "looks like this and a number of the other statics (e.g., timeToLive) could be moved to a \"Context\" object that is passed to the constructor.  That would potentially make it much easier to junit test a Bucket by giving it a new Context.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81de4fa5_cd1a99eb",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "same comment in most of the other classes",
      "parentUuid": "04dc8632_a09a3694",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "518eb75e_b947268a",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "assuming this is needed, should probably throw a ExceptionInInitializerError",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "511ae000_bc86fd29",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "declare as List",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1635f1cd_68481258",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "I\u0027m noticing lots of code that seems to be similar for both owner, primary, and secondary.  Seems like this would imply the need for some additional abstraction.  If that were done, the owner, primary, and secondary objects could be placed into an ArrayList.  That would still provide direct indexing via get/put, but would also be convenient for iterating.  Once that\u0027s done, operations could be performed simply by iterating over each item in the list.\n\nEven if abstraction cannot be done, it still might make sense to put them all into an array/ArrayList so that the same method could be used to manipulate primary and secondary data; just pass a different index to the method.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f05b77d_f1cc7f66",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "declare as Map\n\ndoesn\u0027t this need a suppress-warning \"raw types\"?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "899d56aa_6bcd5bd2",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "use non-static methods, perhaps as methods on the \"Context\"",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a29550_9bcb2cf8",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "or use TLS",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f03ef21d_64e8f705",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "just invoke bucket.getOwner(), as it is already synchronized",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01243691_ce3dbd96",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 274,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "make this a synchronized method call on Bucket thus avoiding the need to synchronize(bucket)\n\nsimilar comment for other uses of \"synchronized(bucket)\"",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c402557d_c2aad981",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "could Rebalance implement Runnable?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c901b88_c9924be2",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 394,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "sonar: use lamdba",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fca3eba_d22526c5",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 407,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "specify character encoding type\n\nsame comment elsewhere",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e5acb74_c0e26223",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 436,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "ok if this throws index-out-of-bounds?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "741858ca_f0675ba0",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 449,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "can getServer() return null?  will it matter?\n\nsame question for other \"case\" blocks",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fe5b22b_3012498d",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 450,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "sonar: nesting is too deep",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87e8c361_8760be31",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "bucket.state \u003d null?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd5c6eb5_0b465260",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 646,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "need to synchronize before copying data?  If not, might it make sense to copy the data in the constructor, as copyData() always seems to be the first thing done, though I don\u0027t know if that\u0027s true in every case.\n\nsame question below",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19369991_2470412d",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 716,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "will this be invoked even if the connection cannot be established?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9b4c56e_f327faee",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 732,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "log e, rethrow or reinterrupt (sonar)",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "397b132a_08e74de2",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 732,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "and just println() a generic message",
      "parentUuid": "b9b4c56e_f327faee",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f52e3116_9b09295c",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 753,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "can bucket be null?  if not, just use plain \"int\"",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851b9b3a_2551e7a6",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 794,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "no need to synchronize to prevent rebalancing by another thread?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f69fb66_e53e1dd9",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 820,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "can\u0027t just pick a random key that isn\u0027t the same as the current host\u0027s key?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b5c159b_240060d2",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 892,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "Wny not to reuse the HttpClient policy-endpoints from policy-endpoints in policy/common?   I think they cover same functionality and if missing could extend it so all can benefit from the work.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61bd97b1_917154b6",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 892,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-02-05T12:10:59Z",
      "side": 1,
      "message": "\u0027webTarget\u0027 was derived from \u0027HttpClient\u0027 -- see \u0027Server.getTarget(HttpClient client)\u0027. The idea was to build \u0027HttpClient\u0027 just once for each remote \u0027Server\u0027 instance, and then build on top of that to construct the specific query. I didn\u0027t see an efficient way to do that with the current API.",
      "parentUuid": "7b5c159b_240060d2",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "043b1e68_e593e56c",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 892,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-05T22:45:18Z",
      "side": 1,
      "message": "I see, thanks for explaining.",
      "parentUuid": "61bd97b1_917154b6",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d5efd0f_d2a314f5",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 896,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "maybe include ttl, too, in case it failed because it couldn\u0027t find the server",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c75f8ec_fe749c83",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 926,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "prefer this to avoid nesting:\n\n  if(...) {\n    return;\n  }\n\n  ...",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a5a8ab5_8f21f5bf",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 949,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "Can adjunct functionality (I think exists in some other places), be placed in policy-utils as a generic library?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "772652c0_a0f936de",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 949,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-02-05T12:10:59Z",
      "side": 1,
      "message": "There is a similar capability in class \u0027Transaction\u0027 in the m2 model, and a slightly different capability in \u0027PolicyContainer\u0027 and \u0027PolicySession\u0027 in \u0027core\u0027. It might be a good idea to try to come up with something generic that could be used everywhere. It gets a bit challenging to do this cleanly, because these are template methods.",
      "parentUuid": "2a5a8ab5_8f21f5bf",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af3bbefa_61a27bd9",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 949,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-05T22:45:18Z",
      "side": 1,
      "message": "Ok, let\u0027s leave it for the future.",
      "parentUuid": "772652c0_a0f936de",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b45bc4d9_3adb39a5",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "add \"final\"?\n\nsame comment with the others",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14a5154c_0e5a17c6",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1416,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "sonar: use a lambda",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e5d49b0_3fcde4f8",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1434,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "need to synchronize(bucket) while copying this data?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c012c8ba_d1e2b277",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1470,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "can get() return null?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88349283_d9e7c316",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1478,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "null?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf3e4298_5ce49d9f",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1486,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "null?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4053f846_5b8eabce",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1523,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "why wrap with a new LinkedList\u003c\u003e() ?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "313596fb_52aa07fe",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1553,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "will this actually remove the bucket from last.buckets?  and add it to first.buckets?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d29ca72_3d3d77a8",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1578,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "sonar: nesting too deep",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3784b2eb_7dd96017",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1787,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "sonar: use lambda",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a453b21_e2df6610",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1819,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "does make me wonder if the output should just be HTML",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c8a2de3_96f96161",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 1975,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "may just use a LinkedHashMap, which would be more efficient than doing contains/add pair",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58af0505_d4031aa0",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 2058,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "declare as Queue",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daf45582_ce87a187",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 2114,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "so we don\u0027t wait for more than one second for network data?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09f8e027_739d525f",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 2173,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "should this be \"!\u003d\" ?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea74184f_cd556ab5",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 2226,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "sonar: nesting too deep",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84a63cc7_dcf0bd7d",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 2274,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "have an approach in mind?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16df8ae9_737caea7",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "should it be forwarded to the new owner?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6acf444d_6ebeaae4",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 2
      },
      "lineNbr": 2372,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:09:51Z",
      "side": 1,
      "message": "declare as List",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5657667f_1bba0e88",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "I would prefer to see this class re-written to use TopicEndpoint",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f7ebce5_c3a4771a",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "FYI: should not assume that StandardCoder is thread-safe",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e32accb_66d41378",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "same comments as with Bucket: put statics into some kind of context object that this can use",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cc9fd18_1c767712",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "This does not apply - remove.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7125da8b_f8e3baaf",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "Seems dup code, and only supports ueb, why not reuse policy policy-endpoints?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a53a044_2a41ae39",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "not applicable - general",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8baa4d5_6c8f4704",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "need separate catch for InterruptedException",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e30f54a_9f2994be",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "sleep give sonars.   policy-endpoints would handle this and allow configuration of values.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5e27526_8a64ef48",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "log e2, and either throw or re-interrupt (sonars).",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5161916c_da086c1a",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "should also drop out of the \"run\" loop",
      "parentUuid": "b5e27526_8a64ef48",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "784314ee_2fede263",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "policy-endpoints.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7fc16fb_f656e9e3",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 338,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "handle InterruptedException differently",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13650806_93762c0f",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Discovery.java",
        "patchSetId": 2
      },
      "lineNbr": 345,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "drop out of run()",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41194143_7625d468",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Events.java",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-02-07T22:27:25Z",
      "side": 1,
      "message": "declare as Queue\n\n\"final\"\n\nif expecting lots of Events being added and removed over time, then maybe use a Map instead",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8416fbd2_948461a0",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/FeatureServerPool.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "use standardcoder ?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc7478ed_62968ded",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/RestServerPool.java",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "Use swagger api to annotate it and placing this class under  package org.onap.policy.drools.server.restful (still under this project) would make telemetry expose it externally to users.",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb437a82_632f06ae",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/ServerPoolProperties.java",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "Can the generic methods be added to PropertyUtil in policy-utils ?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78b2be42_db3f9043",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Util.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "can it use timer facility in PolicyEngine ?",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac8dd709_7cb77c2f",
        "filename": "feature-server-pool/src/test/resources/drools-artifact-1.1/pom.xml",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-02-04T22:17:16Z",
      "side": 1,
      "message": "\"policy-core\"",
      "revId": "4bb878bb751e6fd913286d76d67f16aa50fa998a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}