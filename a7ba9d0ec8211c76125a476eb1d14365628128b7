{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_25c27285",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/SingleThreadedDmaapTopicSource.java",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T14:52:58Z",
      "side": 1,
      "message": "Why renaming, \"dmaap\" is redundant as it is in the class name, the name change is not very static when being shown through the telemetry apis.   I prefer not to rename it.",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_45b1beff",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/SingleThreadedDmaapTopicSource.java",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1645
      },
      "writtenOn": "2018-04-19T15:20:34Z",
      "side": 1,
      "message": "According to sonar \"Child class fields should not shadow parent class fields\".\n\nallowSelfSignedCerts is a field in BusTopicBase",
      "parentUuid": "5a93c517_25c27285",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_45ad3e83",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/SingleThreadedDmaapTopicSource.java",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T15:42:11Z",
      "side": 1,
      "message": "The right solution in this case is to remove the allowSelfSignedCerts from here if is defined in the base class instead of renaming it.",
      "parentUuid": "5a93c517_45b1beff",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_c5baae0a",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/drools/http/server/test/HttpServerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T14:52:58Z",
      "side": 1,
      "message": "What is the exact issue that is corrected here?   2 lines of code instead of 1, and creating the CountDownLatch in every iteration, don\u0027t get quite well the benefit.",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_05cf3680",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/drools/http/server/test/HttpServerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 1645
      },
      "writtenOn": "2018-04-19T15:20:34Z",
      "side": 1,
      "message": "Sonar complains every time we use a Thread.sleep to control timing of junits.",
      "parentUuid": "5a93c517_c5baae0a",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8505867b",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/drools/http/server/test/HttpServerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T15:53:22Z",
      "side": 1,
      "message": "I think this does not address the core issue that sonar is complaining about, we should not rely on time periods, and we should rely on more sophisticated synchronized solutions to account for the time period for a resource to be made available.\n\nThe way that is corrected, it may mask the sonar, perhaps, if shouldn\u0027t if sonar is sophisticated enough.   But it leaves the core issue unresolved, since effectively you are just replacing a sleep with another sleep using a countdownlatch, which is not exactly the purpose of this concurrency utility.   I believe the solution has to be more sophisticated.   I prefer to see a sonar that reminds me of this issue, that perhaps silently with the core issue at hand being unresolved.",
      "parentUuid": "5a93c517_05cf3680",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_25f6f28f",
        "filename": "policy-endpoints/src/test/java/org/onap/policy/drools/http/server/test/HttpServerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 204,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-04-19T16:00:45Z",
      "side": 1,
      "message": "That\u0027s a good point.  So what this means is that we will just leave the Thread.sleep() calls alone until we have time to modify the code to use some type of synchronization mechanism instead.",
      "parentUuid": "5a93c517_8505867b",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e54eca37",
        "filename": "policy-management/src/test/java/org/onap/policy/drools/controller/internal/MavenDroolsControllerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 79,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T14:52:58Z",
      "side": 1,
      "message": "can you paste the sonar issue that this is trying to fix?  In essence, this is the same.   Does the await still throw an InterruptedException?",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_a56442b9",
        "filename": "policy-management/src/test/java/org/onap/policy/drools/server/restful/test/RestManagerTest.java",
        "patchSetId": 5
      },
      "lineNbr": 144,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T14:52:58Z",
      "side": 1,
      "message": "What\u0027s the benefit of this vs a sleep?    There\u0027s no synchronization that is taking place here.",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_45553ec0",
        "filename": "policy-management/src/test/java/org/onap/policy/drools/system/test/PolicyEngineTest.java",
        "patchSetId": 5
      },
      "lineNbr": 278,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T14:52:58Z",
      "side": 1,
      "message": "same question, general question",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_25cfd257",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 1645
      },
      "writtenOn": "2018-04-19T15:53:21Z",
      "side": 1,
      "message": "Jorge, this is the SERVER variable that is conflicted.\n\nHere is the exact issue from the implementation of the interface:\n\"Rename field \"server\" to prevent any misunderstanding/clash with field \"SERVER\" defined in interface \"org.onap.policy.drools.utils.logging.MDCTransaction\".\"",
      "range": {
        "startLine": 171,
        "startChar": 11,
        "endLine": 171,
        "endChar": 17
      },
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e5eb2aa2",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T16:01:50Z",
      "side": 1,
      "message": "I think sonar is confused here, it is a false positive, SERVER implicitly as defined in interface is \"static final String\".   I don\u0027t see how it can clash, provided they are uppercase and lowercase respectively.   I would mark it as a false positive, or rename SERVER in the interface, and make sure any reference to it explicitly, that may be there\u0027s none in this repo and drools applications repo.",
      "parentUuid": "5a93c517_25cfd257",
      "range": {
        "startLine": 171,
        "startChar": 11,
        "endLine": 171,
        "endChar": 17
      },
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_65371a4e",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-04-19T16:07:47Z",
      "side": 1,
      "message": "I don\u0027t believe this is a false positive. The sonar check for this particular issue is case-insensitive, as it\u0027s intended to be.  It doesn\u0027t like fields/methods hiding other fields/methods, whether or not the case is the same. (I personally find sonar to be OCD where this check is concerned, but it\u0027s easy enough to make a change that satisfies sonar, in most cases.)",
      "parentUuid": "5a93c517_e5eb2aa2",
      "range": {
        "startLine": 171,
        "startChar": 11,
        "endLine": 171,
        "endChar": 17
      },
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_a51e826e",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 171,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T17:06:02Z",
      "side": 1,
      "message": "Can somebody show me concrete example on this particular instance, on how this hides anything?   I just don\u0027t see it.  If sonar claims it hides, but it doesn\u0027t (unless proven otherwise), it is a false claim, therefore a false positive.\n\nIn any case, the solution provided is faulty, it renames member but not accompanying get and set methods (which may cause other sonars). and the naming of choice is semantically incorrect, there is not a such thing as an mdcServer.\n\nThese are the options I see: a) if we collude that it is, declare it as false positive, b) rename interface SERVER to something meaningful, and make sure if there are any references in the code are updated, or c) rename member variable to something meaningful, replace get/set to match field name (to be gentle to telemetry API).  One potential name change is to append suffix _SPEC or \"Spec\" to all the fields used for MDC purposes since they come from ONAP logging spec (they are actually using the same names).",
      "parentUuid": "5a93c517_65371a4e",
      "range": {
        "startLine": 171,
        "startChar": 11,
        "endLine": 171,
        "endChar": 17
      },
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e5656aaf",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 568,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T14:52:58Z",
      "side": 1,
      "message": "Same question, why renaming, mdc is in the classname, so it is redundant.   Semantically, there\u0027s no such thing as an mdcServer.   In addition, presentation through telemetry tool is not that pretty.   To be consistent with javabean naming, getServer, should also move to getMdcServer, same thing for set, the change is incomplete.",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e56faa5e",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 568,
      "author": {
        "id": 1645
      },
      "writtenOn": "2018-04-19T15:25:55Z",
      "side": 1,
      "message": "Sonar complains whenever an implementer of an interface has a member variable that is identical to a variable defined in the interface.",
      "parentUuid": "5a93c517_e5656aaf",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_e5bd6ab2",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 568,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T15:47:27Z",
      "side": 1,
      "message": "But I don\u0027t see it defined on the interface, so I don\u0027t quite get it.   Can you point me to where that is defined in the interface?",
      "parentUuid": "5a93c517_e56faa5e",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_8506e6cc",
        "filename": "policy-utils/src/main/java/org/onap/policy/drools/utils/logging/MDCTransaction.java",
        "patchSetId": 5
      },
      "lineNbr": 585,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T14:52:58Z",
      "side": 1,
      "message": "same comment",
      "revId": "a7ba9d0ec8211c76125a476eb1d14365628128b7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}