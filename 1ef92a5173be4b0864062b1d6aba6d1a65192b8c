{
  "comments": [
    {
      "key": {
        "uuid": "9444eb6b_2db72956",
        "filename": "feature-distributed-locking/src/test/resources/feature-distributed-locking.properties",
        "patchSetId": 15
      },
      "lineNbr": 30,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "want to prefix properties with distributed.locking as before?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58a62eba_75587d8b",
        "filename": "feature-distributed-locking/src/test/resources/feature-distributed-locking.properties",
        "patchSetId": 15
      },
      "lineNbr": 30,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "looked at the other features and most do NOT appear to use a prefix - \"persistence\" was one of the exceptions",
      "parentUuid": "9444eb6b_2db72956",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "830b1da7_b2ebdfec",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 92,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "I think we should centralized the service in PolicyEngine so we don\u0027t have a proliferation of these.",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab3cd007_14a9e7d7",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 92,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "moved into PolicyEngine",
      "parentUuid": "830b1da7_b2ebdfec",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6434a59_51dfee3d",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 111,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "I wonder if we need this vs relying on sequenceNumber and usual feature takeover mechanisms when invoking the lock or unlock as in other feature work.",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "530ebdc8_85862ab2",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 115,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "what would be an example of extractor being used in CL context?  In which properties file would this go, in the controllers?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca391984_e1594a19",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 115,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "yes, it would go in the controller properties file",
      "parentUuid": "530ebdc8_85862ab2",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7775d05c_4282811e",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "I don\u0027t think there is value in rethrowing the exception when afterStart is called from the feature invoker mechanism.",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde8b240_f8497ce4",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 126,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "afterStart cannot throw a checked exception, thus it has to be wrapped in a run-time exception",
      "parentUuid": "7775d05c_4282811e",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8829bc82_de2ffea5",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 152,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "Is there a reason for this vs afterStop?\nShould it go and iterate over \"checkExpired\" ? or release any locks that are being held to freed up CL transactions in progress?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e492a946_5a2e7d6b",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 152,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "Changed it to afterStop.\n\nThese are not distributed locks; they only exist in this feature object instance, so no need to free them.",
      "parentUuid": "8829bc82_de2ffea5",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d58d748a_d31e3eeb",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 256,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "should this be checked in super() ?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b64751f6_bdb4498e",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 256,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "I had left it out of super in case some implementation wished to allow negative values for some reason.  However, that just doesn\u0027t seem likely, so I\u0027ve moved it into the super class.",
      "parentUuid": "d58d748a_d31e3eeb",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d39ee95_8d653986",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 274,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "synchronization ?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bf12ef3_0ef56c4f",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 274,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "things were synchronized by the atomicity of map.compute().  However, there were still some gaps, so synchronization has been added in a few places.",
      "parentUuid": "2d39ee95_8d653986",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47191c35_3e370155",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 288,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "synchronization?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c8983eb_8a2b808f",
        "filename": "feature-simple-locking/src/main/java/org/onap/policy/simple/locking/SimpleLockingFeature.java",
        "patchSetId": 15
      },
      "lineNbr": 324,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "synchronization ?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96113fac_daad5408",
        "filename": "feature-simple-locking/src/test/resources/feature-simple-locking.properties",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "is this file used?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04e6c0e0_c8e1f71a",
        "filename": "feature-simple-locking/src/test/resources/feature-simple-locking.properties",
        "patchSetId": 15
      },
      "lineNbr": 24,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "This file is not required, but its use does prevent excessive numbers of exceptions from being logged in the output.",
      "parentUuid": "96113fac_daad5408",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ffd7700_b5b235b0",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/Extractor.java",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "Shouldn\u0027t this class would need to go into either policy-utils (similar package as PropertyUtils) or directly into commons?    There is a class called Extractor.java in feature-pooling-dmaap, may be a more expressive name for this class?  Where is the class used?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df1397b8_b4ec03ff",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/Extractor.java",
        "patchSetId": 15
      },
      "lineNbr": 148,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "probably better to make the exception more noticeable, WARN ?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f8666fb_52667ceb",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/Extractor.java",
        "patchSetId": 15
      },
      "lineNbr": 148,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "wasn\u0027t sure since it may go through a sequence of different scripts, each of which could generate an exception prior to reaching the script that actually works.  Will change it to \"warn\" for now and we\u0027ll see whether or not it clutters the log",
      "parentUuid": "df1397b8_b4ec03ff",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2d93d31_b7cb4f4f",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/LockImpl.java",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "is the parameter number ok for sonar, or need a builder?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8608e521_5f542db8",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/LockImpl.java",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "refactored, extracting AlwaysFailLock, which eliminated the need for the \"success\" parameter (and made the code a little cleaner)",
      "parentUuid": "d2d93d31_b7cb4f4f",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65848845_f8b6cefe",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/LockImpl.java",
        "patchSetId": 15
      },
      "lineNbr": 100,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "does it need synchronization?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e1f3ca9_5a5b9e66",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/LockImpl.java",
        "patchSetId": 15
      },
      "lineNbr": 100,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "moved to AlwaysFailLock, wherein synchronization is not needed",
      "parentUuid": "65848845_f8b6cefe",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1def275_96dbc31f",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/LockImpl.java",
        "patchSetId": 15
      },
      "lineNbr": 110,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "does it need synchronization?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9d39136_7d3f813e",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/LockImpl.java",
        "patchSetId": 15
      },
      "lineNbr": 110,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "moved to AlwaysFailLock, and added synchronization",
      "parentUuid": "b1def275_96dbc31f",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "182e3c13_f40eaecc",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/PolicyResourceLockFeatureApi.java",
        "patchSetId": 15
      },
      "lineNbr": 50,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "Not sure if needed?",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a3ea203_b89fb648",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/PolicyResourceLockFeatureApi.java",
        "patchSetId": 15
      },
      "lineNbr": 74,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "If a lock is returned it may mean that the feature provider underneath owns the operation so next features in list should be skipped.    The feature priority could dictate which one wins as usual.  One idea to have the code more consistent with current uses.",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d60e798_e5cb3ae1",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/PolicyResourceLockManager.java",
        "patchSetId": 15
      },
      "lineNbr": 32,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "It seems to me that the PolicyResouceLockManager should be instantiated from PolicyEngine and accessible from there (which eliminates need for singleton here too).\n\nBear with me Jim, just trying to understand:\nIs it a PolicyResourceLockManager necessary, or could we somehow rely on patterns that we had before to do the locking, ie.. \n\nclient code (for example drools applications):\n\n\nLock lock \u003d PolicyEngine.lock(lock-parameters-here).\n\nIn PolicyEngine:\n\nPolicyEngine.lock(lock-parameters-here) {\n   /* before lock hook */\n   iterate-through-all-features implementing the interface calling\n   Lock beforeLock(lock-parameters-here).\n   if Lock is NOT null, the feature took ownership, done with this method.\n   else continue\n\n   /* default implementation which is the one that you have in the\n      DefaultProvider below */\n\n   /* after lock hook similar to the before lock hook */\n}",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8caf70d5_4bf6d54d",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/PolicyResourceLockManager.java",
        "patchSetId": 15
      },
      "lineNbr": 32,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "Still working on this...",
      "parentUuid": "8d60e798_e5cb3ae1",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b212342d_57f93f62",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/PolicyResourceLockManager.java",
        "patchSetId": 15
      },
      "lineNbr": 127,
      "author": {
        "id": 477
      },
      "writtenOn": "2019-10-09T23:38:08Z",
      "side": 1,
      "message": "Does this overlap with the one in feature-simple-lock?   Could the feature-simple-lock one be made the default instead?   It has the same sequence number.",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bf5e7cf_4431328a",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/PolicyResourceLockManager.java",
        "patchSetId": 15
      },
      "lineNbr": 134,
      "author": {
        "id": 743
      },
      "writtenOn": "2019-10-11T13:09:42Z",
      "side": 1,
      "message": "Shouldn\u0027t this have a high sequence number? It should not be chosen if there are other providers.",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b61146f_70510f0c",
        "filename": "policy-core/src/main/java/org/onap/policy/drools/core/lock/PolicyResourceLockManager.java",
        "patchSetId": 15
      },
      "lineNbr": 134,
      "author": {
        "id": 811
      },
      "writtenOn": "2019-10-11T13:25:41Z",
      "side": 1,
      "message": "You are right - corrected",
      "parentUuid": "6bf5e7cf_4431328a",
      "revId": "1ef92a5173be4b0864062b1d6aba6d1a65192b8c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}