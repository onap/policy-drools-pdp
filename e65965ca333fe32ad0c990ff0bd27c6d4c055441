{
  "comments": [
    {
      "key": {
        "uuid": "b7cb9313_44c72e6e",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-06-24T14:17:08Z",
      "side": 1,
      "message": "I believe this should be atMost() instead of pollInterval()",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f9133e7_5b57278d",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T14:41:06Z",
      "side": 1,
      "message": "since there is no \"until\" conditional statement. either atMost or pollInterval acted the same, but I will change to atMost",
      "parentUuid": "b7cb9313_44c72e6e",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af495e5a_517c7e4f",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-06-24T15:00:46Z",
      "side": 1,
      "message": "oh, good point.  Looks like lines 177-179 should be combined into a single call:\n\n  await().atMost(...).until(... !\u003d null)",
      "parentUuid": "7f9133e7_5b57278d",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fc46240_5cdc2af2",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T15:30:17Z",
      "side": 1,
      "message": "when I combined those lines. the test failed...",
      "parentUuid": "af495e5a_517c7e4f",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6cd7199_3f850cb0",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-06-24T15:33:22Z",
      "side": 1,
      "message": "It shouldn\u0027t have failed.  When you combined them, did you remember to change \"\u003d\u003d\" to \"!\u003d\" ?",
      "parentUuid": "6fc46240_5cdc2af2",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1aea9b9_8ac38124",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T15:35:38Z",
      "side": 1,
      "message": "await().atMost(Math.min(endTime - System.currentTimeMillis(), 100L), TimeUnit.MILLISECONDS)\n       .until(() -\u003e bucket.getOwner() !\u003d null);\n\nthat is what I did in my local...",
      "parentUuid": "f6cd7199_3f850cb0",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10597e79_9ba4c2d8",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-06-24T15:42:31Z",
      "side": 1,
      "message": "ah, try changing \"min\" to \"max\"",
      "parentUuid": "b1aea9b9_8ac38124",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11f901fb_45135691",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T15:46:53Z",
      "side": 1,
      "message": "ha.. that worked.",
      "parentUuid": "10597e79_9ba4c2d8",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b4294ef_6d3fc74f",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T15:57:41Z",
      "side": 1,
      "message": "sorry, that changed to max did not work, after I rerun test in my local",
      "parentUuid": "11f901fb_45135691",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3189d5e_98dc5282",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpooltest/Test1.java",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-06-24T02:25:44Z",
      "side": 1,
      "message": "no issue, but the toString() in adapter could be avoided.",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "008455de_f0bd2fc0",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpooltest/Test1.java",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-06-24T08:20:18Z",
      "side": 1,
      "message": "Why is this viewed as an improvement? The previously-existing assert would provide more information if an error occurs.",
      "parentUuid": "d3189d5e_98dc5282",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efd312d7_f92356aa",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpooltest/Test1.java",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T10:58:14Z",
      "side": 1,
      "message": "assertEquals can put msg as an extra argument. I moved msg to logger.info to keep the same function as before. not an improvement. and Assert.assertTrue(a.equals(b)); is Noncompliant Code based on sonar.",
      "parentUuid": "008455de_f0bd2fc0",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81bdcb40_3f8d0560",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpooltest/Test1.java",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-06-24T14:17:08Z",
      "side": 1,
      "message": "maybe just eliminate logger.info line and add adapter.toString() as the first argument to assertEquals.  Eclipse (and intellij, I assume) will show the expected vs actual value without having to include them in the message.",
      "parentUuid": "efd312d7_f92356aa",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beb336bc_4405f637",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpooltest/Test1.java",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 2477
      },
      "writtenOn": "2020-06-24T14:41:06Z",
      "side": 1,
      "message": "ok. will change",
      "parentUuid": "81bdcb40_3f8d0560",
      "revId": "e65965ca333fe32ad0c990ff0bd27c6d4c055441",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}