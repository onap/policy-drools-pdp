{
  "comments": [
    {
      "key": {
        "uuid": "5a93c517_e5132aff",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/BusConsumer.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 477
      },
      "writtenOn": "2018-04-19T15:14:10Z",
      "side": 1,
      "message": "I think this will interfere with fetch method above, note that the close method of this class does a little more than just plainly closing the cambria consumer.",
      "revId": "952965e7c5277ca3648704d58011afca659f2101",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_c572ae49",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/BusConsumer.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-04-19T15:36:38Z",
      "side": 1,
      "message": "Good point.  Think I\u0027ll just abandon this change.",
      "parentUuid": "5a93c517_e5132aff",
      "revId": "952965e7c5277ca3648704d58011afca659f2101",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_6585dacd",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/BusConsumer.java",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-04-19T16:25:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a93c517_c572ae49",
      "revId": "952965e7c5277ca3648704d58011afca659f2101",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_fa2509c2",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/BusConsumer.java",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 743
      },
      "writtenOn": "2018-04-19T12:34:39Z",
      "side": 1,
      "message": "Isn\u0027t \u0027StringBuilder\u0027 more efficient, particularly when concatenating a large number of strings?",
      "revId": "952965e7c5277ca3648704d58011afca659f2101",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a93c517_1a0a3526",
        "filename": "policy-endpoints/src/main/java/org/onap/policy/drools/event/comm/bus/internal/BusConsumer.java",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 811
      },
      "writtenOn": "2018-04-19T13:19:32Z",
      "side": 1,
      "message": "Not in this case, as Java turns this into StringBuilder operations.  There are two cases where it makes sense to use StringBuilder: 1) when appending strings in a loop  2) as an argument to methods that may want to append more text",
      "parentUuid": "5a93c517_fa2509c2",
      "revId": "952965e7c5277ca3648704d58011afca659f2101",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}