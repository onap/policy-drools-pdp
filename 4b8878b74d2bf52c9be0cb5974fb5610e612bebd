{
  "comments": [
    {
      "key": {
        "uuid": "7fca5f48_7c05bb5c",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 1
      },
      "lineNbr": 1480,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "return ?",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dde6fc9e_84aa0db2",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 1
      },
      "lineNbr": 1480,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "Good catch -- I will fix it.",
      "parentUuid": "7fca5f48_7c05bb5c",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c9aceb_deebc1ed",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 1
      },
      "lineNbr": 1480,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-12T12:51:56Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "dde6fc9e_84aa0db2",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "376ae084_6b5b5a5a",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 1
      },
      "lineNbr": 1956,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "sonar complain about this?  surprising.  FYI: sonar would have been ok with this, too:\n\n  if(--count \u003c\u003d 0)",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05335c16_420f47be",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Bucket.java",
        "patchSetId": 1
      },
      "lineNbr": 1956,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "That\u0027s surprising, given that they are equivalent. I am not a big fan of Sonar -- does it show?",
      "parentUuid": "376ae084_6b5b5a5a",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73de9625_f5cb1f3b",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Keyword.java",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "I\u0027m surprised this passes checkstyle - didn\u0027t think it liked the \"_\", preferring camel-case instead\n\nsame comment for \"xxx_build()\"",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bce13d86_15300d1c",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Keyword.java",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "Clearly, it did pass checkstyle -- maybe it allows \u0027_\u0027 if you have camel-case as well. This code used to be part of \u0027buildReflectiveLookup\u0027, and the method name \u0027lookupClassByName\u0027 doesn\u0027t describe what it does. I am using the \u0027_\u0027 notation to indicate that this method is logically part of \u0027buildReflectiveLookup\u0027, and wouldn\u0027t exist as a separate method if we didn\u0027t have this Sonar !@#$% to deal with.",
      "parentUuid": "73de9625_f5cb1f3b",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0beb1296_6a776eb2",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Leader.java",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "this will still have a sonar issue - nesting is too deep",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1c64730_cf81dd76",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Leader.java",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-12T12:51:56Z",
      "side": 1,
      "message": "I will add a \u0027continue\u0027 after line 333 -- that way, the \u0027else\u0027 can be removed, and the rest of the code will have one less level of indentation. The code becomes less readable, but it may make Sonar happy -- is this really progress?",
      "parentUuid": "0beb1296_6a776eb2",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68bc9214_d434fb53",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Server.java",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "fyi: another way to satisfy sonar is to just add \"final\"",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b111e2b0_31d392b1",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/Server.java",
        "patchSetId": 1
      },
      "lineNbr": 1040,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "I wonder what the logic is behind that? \u0027final\u0027 does keep the intermediate code from reassigning an object, but it doesn\u0027t prevent it from mucking around with the object.",
      "parentUuid": "68bc9214_d434fb53",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7062caf6_f2891171",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 1729,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "sonar: nesting too deep?  may want to extract this \"for\" loop into its own method, too",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f0f5606_7f696d3e",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 1729,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-12T12:51:56Z",
      "side": 1,
      "message": "I have decided that it is better to extract around an object (e.g. \u0027waiting\u0027), rather than a block of code. I also went back, and split the \u0027client\u0027 and \u0027server\u0027 loops in the same way.",
      "parentUuid": "7062caf6_f2891171",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7531c487_f3492630",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2725,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "sonar: only one continue/break allowed within a \"for\" loop",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c24ff43_ee4231f7",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2725,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "I know -- that constraint doesn\u0027t make any sense to me. I was planning on ignoring that one. Aren\u0027t multiple breaks/continues within a loop comparable to having multiple return points in a method?\n\nAt one point, structured programming advocates were claiming that you should only have one return per function or method. I did get into the habit of doing this, where possible -- code like:\n\nif (condition)\n  {\n     error leg ...\n  }\nelse\n  {\n     success leg ...\n  }\n\nrather than:\n\nif (condition)\n  {\n     error leg ...\n     return\n  }\nsuccess leg ...\n\nAs you have indicated, ONAP now prefers the latter, because \u0027success leg\u0027 has one less level of nesting, and sonar doesn\u0027t like nesting.",
      "parentUuid": "7531c487_f3492630",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b104847d_4216b2a8",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2725,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-11T13:09:12Z",
      "side": 1,
      "message": "I agree, seems almost contradictory.  Nevertheless, since it allows more than one \"return\", I will sometimes address this by extracting the body of the \"for\" loop into a method and then replacing the \"continue\" with \"return\" and having the method return true/false to indicate \"continue\" versus \"break\".  Other times it can be managed by simply turning some \"if\" statements into \"else if\" statements.",
      "parentUuid": "7c24ff43_ee4231f7",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4045840_18b1398f",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2725,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-12T12:51:56Z",
      "side": 1,
      "message": "I moved the operations that correspond to a single Server into a separate method -- the \u0027continue\u0027 statements get changed to \u0027return\u0027.",
      "parentUuid": "b104847d_4216b2a8",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ab97e1e_37cc8a47",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2754,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "apparently a lot of this code is a duplicate of the lines starting on line 2683.  Perhaps extract a common function? (sonar may or may not complain about it)",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc58f3b3_9b418631",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2754,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "I don\u0027t see the common code you are referring to -- there are other \u0027Server.PostResponse\u0027 instances with \u0027webTarget\u0027 and \u0027response\u0027 methods, but the contents are quite different.",
      "parentUuid": "0ab97e1e_37cc8a47",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9dbabe5_68c671ae",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2754,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-11T13:09:12Z",
      "side": 1,
      "message": "2756-2830 looks similar to 2666-2733, but maybe not similar enough - not sure.  I only noticed it, because gerrit\u0027s code diff incorrectly identified a chunk of these lines as being the same, even though they are from completely separate blocks.  That caused me to examine them a bit more closely and found that, not only were those particular lines the same, but in fact much of the lines surrounding the duplicates were similar, too.\n\nBasically, it looks like an AuditPostResponse object could be used to replace much of the body of the \"for\" loop in the send() method, because its response() method looks very similar.",
      "parentUuid": "bc58f3b3_9b418631",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7ca19ca_3c8bde8f",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/TargetLock.java",
        "patchSetId": 1
      },
      "lineNbr": 2754,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-12T12:51:56Z",
      "side": 1,
      "message": "OK - I see what you are referring to. I moved that piece into a separate method, but it is difficult to describe what that method does -- it is just a chunk of code that does multiple things that appeared in more than one place.",
      "parentUuid": "f9dbabe5_68c671ae",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0220d2e6_4d884ad0",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/persistence/Persistence.java",
        "patchSetId": 1
      },
      "lineNbr": 689,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "checkstyle issue with function name??",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f34707b0_1e306870",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/persistence/Persistence.java",
        "patchSetId": 1
      },
      "lineNbr": 689,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "Checkstyle is OK with it -- I would like to continue using this notation to indicate that this is logically part of \u0027restoreBucket\u0027, and this functionality is too specific to be called anywhere else.",
      "parentUuid": "0220d2e6_4d884ad0",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b48c8980_872acf02",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/persistence/Persistence.java",
        "patchSetId": 1
      },
      "lineNbr": 689,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-11T13:09:12Z",
      "side": 1,
      "message": "Fine with me since checkstyle seems to be happy.  Maybe the cases in which I\u0027ve seen it complain are when the letter after the \"_\" is capitalized.",
      "parentUuid": "f34707b0_1e306870",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23ce8f4b_1ad418da",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/persistence/Persistence.java",
        "patchSetId": 1
      },
      "lineNbr": 772,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-05-08T14:31:18Z",
      "side": 1,
      "message": "checkstyle issue with name??",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eb33ac0_44c79520",
        "filename": "feature-server-pool/src/main/java/org/onap/policy/drools/serverpool/persistence/Persistence.java",
        "patchSetId": 1
      },
      "lineNbr": 772,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-05-11T12:44:06Z",
      "side": 1,
      "message": "Checkstyle is OK with it.",
      "parentUuid": "23ce8f4b_1ad418da",
      "revId": "4b8878b74d2bf52c9be0cb5974fb5610e612bebd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}