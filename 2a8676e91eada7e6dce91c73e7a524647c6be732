{
  "comments": [
    {
      "key": {
        "uuid": "8e044ddd_7354d476",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 811
      },
      "writtenOn": "2020-03-17T14:42:08Z",
      "side": 1,
      "message": "why not use this for all OSs?",
      "revId": "2a8676e91eada7e6dce91c73e7a524647c6be732",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f2848f6_4c50d179",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-03-17T14:51:45Z",
      "side": 1,
      "message": "Pretty sure I saw this in my Ubuntu VM (16.04) - when I get 18.04 configured I\u0027ll try again. Note that our VM\u0027s in Research are more protected. So it isn\u0027t necessary mac vs windows issue.",
      "parentUuid": "8e044ddd_7354d476",
      "revId": "2a8676e91eada7e6dce91c73e7a524647c6be732",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fa57901_417c45e1",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 57
      },
      "writtenOn": "2020-03-17T16:32:37Z",
      "side": 1,
      "message": "Ok works on ubuntu 18.04 VM - but I think Jim\u0027s question is valid.",
      "parentUuid": "8f2848f6_4c50d179",
      "revId": "2a8676e91eada7e6dce91c73e7a524647c6be732",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab8128d_613bb398",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpool/AdapterImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-03-17T17:18:00Z",
      "side": 1,
      "message": "The standard configuration will have a common port and separate IP addresses, since they will be on separate machines, so that configuration is preferable. The use of a single IP address and separate ports is just a workaround for the Macintosh.",
      "parentUuid": "5fa57901_417c45e1",
      "revId": "2a8676e91eada7e6dce91c73e7a524647c6be732",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "800eb040_506d3fbc",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpooltest/Adapter.java",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 2787
      },
      "writtenOn": "2020-03-18T09:10:52Z",
      "side": 1,
      "message": "Just a general question on the implementation here.\n\nDoes the implementaiton of a host that should join a server pool need to hand craft its own class loader? Is this how you build a custom controller? Or am I making sense?",
      "range": {
        "startLine": 115,
        "startChar": 1,
        "endLine": 138,
        "endChar": 49
      },
      "revId": "2a8676e91eada7e6dce91c73e7a524647c6be732",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28543bad_2d0b7fc8",
        "filename": "feature-server-pool/src/test/java/org/onap/policy/drools/serverpooltest/Adapter.java",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 743
      },
      "writtenOn": "2020-03-18T09:33:21Z",
      "side": 1,
      "message": "This is only for the Junit tests -- \u0027BlockingClassLoader\u0027 is providing separate namespaces, so it is possible to have 6 servers run within the same JVM. Classes in packages whose names begin with \u0027org.onap.policy.\u0027 are replicated, with the exception of classes in package \u0027org.onap.policy.drools.serverpooltest\u0027, and class \u0027org.onap.policy.drools.core.DroolsRunnable\u0027. As a result, there are not only 6 server pools running, but each one is running under a separate \u0027PolicyEngine\u0027.\n\nAn alternative way of doing this would have been to have the Junit test start 6 other JVMs, but then there would need to be some mechanism where the test could drive the behavior of code in the other JVMs, and then verify the results. The coding would have been more difficult, although it might be easier to understand, conceptually.",
      "parentUuid": "800eb040_506d3fbc",
      "range": {
        "startLine": 115,
        "startChar": 1,
        "endLine": 138,
        "endChar": 49
      },
      "revId": "2a8676e91eada7e6dce91c73e7a524647c6be732",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e2f803f_00e1d705",
        "filename": "feature-server-pool/src/test/resources/feature-server-pool-test.properties",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 477
      },
      "writtenOn": "2020-03-17T20:46:06Z",
      "side": 1,
      "message": "for junits configuration you can put directly the address you want to use, ie. server.pool.server.ipAddress\u003d127.0.0.1 - as junits would not have those environment variables set up previous to their execution, so you can omit them in general.  It would be more clear if you skip the envd as they will not be set up (unless you do something special with maven previous running junit tests).",
      "revId": "2a8676e91eada7e6dce91c73e7a524647c6be732",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}