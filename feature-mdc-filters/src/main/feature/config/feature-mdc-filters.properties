###
# ============LICENSE_START=======================================================
# feature-mdc-filters
# ================================================================================
# Copyright (C) 2019 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================
###

# The properties keys follow the controller topic configurations followed by a
# a new topic property, 'mdcFilters'.
#<protocol>.<type>.topics.<topic-name>.mdcFilters

# The value of the property is broken down to the MDC key name to be used by the 
# feature followed by the path(s) to the desired field's value.
#dmaap.sink.topics.example.mdcFilters=sampleKey=$.path.to.sample.key

# The path always begins with '$' as this signifies the root of the JSON document.
# The underlying library used is Jayway JsonPath. The library's query syntax is 
# supported for searching a JSON document. The query syntax and some examples 
# can be found at: https://github.com/json-path/JsonPath

# Multiple fields can be found for a given JSON document by a comma separated list
# of <mdcKey,jsonPath> pairs.
#dmaap.sink.topics.example.mdcFilters=field1=$.field1,field2=$.field2

# If a given topic supports multiple message types that have fields with the same
# name, a '|' separated list can define multiple paths to a field. The feature
# will loop through each path until it finds a match and returns it.
#dmaap.sink.topics.example.mdcFilters=field1=$.field1|$.body.field1

# dmaap source filters
dmaap.source.topics.PDPD-CONFIGURATION.mdcFilters=requestID=$.requestID
dmaap.source.topics.DCAE_TOPIC.mdcFilters=requestID=$.requestID
dmaap.source.topics.APPC-CL.mdcFilters=requestID=$.CommonHeader.RequestID
dmaap.source.topics.APPC-LCM-WRITE.mdcFilters=requestID=$.body.output.common-header.request-id
dmaap.source.topics.SDNR-CL-RSP.mdcFilters=requestID=$.body.CommonHeader.RequestID

# dmaap sink filters
dmaap.sink.topics.POLICY-CL-MGT.mdcFilters=requestID=$.requestID
dmaap.sink.topics.APPC-CL.mdcFilters=requestID=$.CommonHeader.RequestID
dmaap.sink.topics.APPC-LCM-READ.mdcFilters=requestID=$.body.input.common-header.request-id
dmaap.sink.topics.SDNR-CL.mdcFilters=requestID=$.body.CommonHeader.RequestID
dmaap.sink.topics.DCAE_CL_RSP.mdcFilters=requestID=$.requestID
