{
  "comments": [
    {
      "key": {
        "uuid": "475d567a_d39e95eb",
        "filename": "feature-lifecycle/src/main/java/org/onap/policy/drools/lifecycle/LifecycleFsm.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 3239
      },
      "writtenOn": "2022-01-26T20:59:32Z",
      "side": 1,
      "message": "The approach we are following in other components (distribution, apex-pdp) is to have separate counters for total, success \u0026 failure. I see that you are registering a single counter and using the labels instead.\nMay be we should align to one way.\n\nOne benefit of having them separate will be the ease of reading and creating dashboards in Grafana or similar tools.\n\n@Rashmi \u0026 @Ajith feel free to add your thoughts.",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 106,
        "endChar": 67
      },
      "revId": "a218bdd5202fcd47607a589000058e02f583879c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "693b7d25_0952b89c",
        "filename": "feature-lifecycle/src/main/java/org/onap/policy/drools/lifecycle/LifecycleFsm.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-01-26T22:25:14Z",
      "side": 1,
      "message": "IMO it seems unnecessary to have the 6 prom. counters in distribution/apex just for deploy/undeploy:\n\nI took this approach with labels (with limited cardinality), to align with how I understood \nbest practices from here (source code gets less bulky too):\n\nhttps://prometheus.io/docs/practices/instrumentation/#use-labels\n\nQuote:\n\u003e When you have multiple metrics that you want to add/average/sum, they should usually be \n\u003e one metric with labels rather than multiple metrics.\n\u003e \n\u003e For example, rather than http_responses_500_total and http_responses_403_total, create a \n\u003e single metric \u003e called http_responses_total with a code label for the HTTP response code. \n\u003e You can then process the entire metric as one in rules and graphs\n\u003e \n\nIn theory I think it should allow aggregation of all labels or any combination subset of them with promql.\n\nI seem to understand the same from here:\n\nhttps://prometheus.io/docs/practices/naming/\n\nQuote:\n\u003e Use labels to differentiate the characteristics of the thing that is being measured:\n\u003e\n\u003e api_http_requests_total - differentiate request types: operation\u003d\"create|update|delete\"\n\u003e api_request_duration_seconds - differentiate request stages: \u003e stage\u003d\"extract|transform|load\"\n\u003e Do not put the label names in the metric name, as this introduces redundancy and will \n\u003e cause confusion if the respective labels are aggregated away.\n\nI also want to provide on drools side, state information of when the policy was deployed (state) label \nthat probably won\u0027t be expected in the distribution/apex side, so I don\u0027t think we\u0027ll have all components\nfully aligned on exact metric.",
      "parentUuid": "475d567a_d39e95eb",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 106,
        "endChar": 67
      },
      "revId": "a218bdd5202fcd47607a589000058e02f583879c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b43906b_b3365de7",
        "filename": "feature-lifecycle/src/main/java/org/onap/policy/drools/lifecycle/LifecycleFsm.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 159
      },
      "writtenOn": "2022-01-27T03:35:54Z",
      "side": 1,
      "message": "Indeed we cannot fully align on the metrics across all components, for instance only operation and acceptance apply to apex/distribution. However, I do think we can align on the label key/values e.g. \"operation:deploy/undeploy\", \"acceptance/status:accepted/declined or success/failure\" and name of the metrics themselves wherever applicable (mainly deployment stats and policy execution stats). I was not comfortable defining my own strings for labels in the first pass and let them evolve as we extend metrics supports across the FWK. What do you think?\n\nOtherwise the changes LGTM.",
      "parentUuid": "693b7d25_0952b89c",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 106,
        "endChar": 67
      },
      "revId": "a218bdd5202fcd47607a589000058e02f583879c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d9c0213_38e8371e",
        "filename": "feature-lifecycle/src/main/java/org/onap/policy/drools/lifecycle/LifecycleFsm.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 4903
      },
      "writtenOn": "2022-01-27T13:00:20Z",
      "side": 1,
      "message": "Sounds good to me.\n@Jorge: Thanks, that is informative. One comment though, wouldn\u0027t \"status: success/failure\" suit better than \"acceptance: accepted/declined\"?",
      "parentUuid": "3b43906b_b3365de7",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 106,
        "endChar": 67
      },
      "revId": "a218bdd5202fcd47607a589000058e02f583879c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60c163fd_2fc1fc87",
        "filename": "feature-lifecycle/src/main/java/org/onap/policy/drools/lifecycle/LifecycleFsm.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 3239
      },
      "writtenOn": "2022-01-27T23:06:19Z",
      "side": 1,
      "message": "Nice explanation Jorge!\n\nI agree with your point, we can use labels. It\u0027s never too late to correct ourselves ðŸ˜Š\n\nAs said by Rashmi \u0026 Ajith, it will be good to define constants (probably enum in policy/common) and use the same everywhere. Would you mind raising the review for the same?",
      "parentUuid": "4d9c0213_38e8371e",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 106,
        "endChar": 67
      },
      "revId": "a218bdd5202fcd47607a589000058e02f583879c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cdb1188_b218d0b2",
        "filename": "feature-lifecycle/src/main/java/org/onap/policy/drools/lifecycle/LifecycleFsm.java",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 477
      },
      "writtenOn": "2022-01-28T15:43:40Z",
      "side": 1,
      "message": "That\u0027s good, I\u0027ll make this constants below ..\n\nIt seems to me a little bit more models oriented this type of data.   Thoughts?\n\n// cannot have \"-\" in the namespace\n// this I am not sure we should fix in a enum.  \n// Thoughts?\nPROMETHEUS_NAMESPACE \u003d enum { \"api\", \"pap\", \"distribution\", \"pdpa\", \"pdpx\", \"pdpd\" }   \n\n// prometheus library will generate for counters of the form:\n// \u003cPROMETHEUS_NAMESPACE\u003e_\u003cPROMETHEUS_COUNTER_DEPLOY_REQUESTS\u003e_total\n\nPROMETHEUS_DEPLOY_METRIC \u003d \"policy_deploy_requests\"\n\n// these labels can be applied to any object\nPROMETHEUS_OPERATION_LABEL \u003d \"operation\"\nPROMETHEUS_STATE_LABEL \u003d \"state\"  \nPROMETHEUS_STATUS_LABEL \u003d \"status\"    \n\n// The operation values not need to be defined and can be retrieve \n// from policy/models:\n\norg.onap.policy.models.pdp.enums.PdpResponseStatus\norg.onap.policy.models.pdp.enums.PdpState\n\nPROMETHEUS_OPERATION_VALUES \u003d enum { \"deploy\", \"undeploy\" }\n\nLet\u0027s just focus on metrics deploy/undeploy oriented for this exercise.\nComments?",
      "parentUuid": "60c163fd_2fc1fc87",
      "range": {
        "startLine": 106,
        "startChar": 20,
        "endLine": 106,
        "endChar": 67
      },
      "revId": "a218bdd5202fcd47607a589000058e02f583879c",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}