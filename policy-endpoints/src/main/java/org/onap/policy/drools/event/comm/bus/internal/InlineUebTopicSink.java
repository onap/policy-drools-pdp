/*
 * ============LICENSE_START=======================================================
 * policy-endpoints
 * ================================================================================
 * Copyright (C) 2017-2018 AT&T Intellectual Property. All rights reserved.
 * ================================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============LICENSE_END=========================================================
 */

package org.onap.policy.drools.event.comm.bus.internal;

import java.util.List;

import org.onap.policy.drools.event.comm.Topic;
import org.onap.policy.drools.event.comm.bus.UebTopicSink;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;

/**
 * This implementation publishes events for the associated UEB topic,
 * inline with the calling thread.
 */
public class InlineUebTopicSink extends InlineBusTopicSink implements UebTopicSink {
	
	/**
	 * logger 
	 */
	private static Logger logger = LoggerFactory.getLogger(InlineUebTopicSink.class);
	
	/**
	 * Argument-based UEB Topic Writer instantiation
	 * 
	 * @param servers list of UEB servers available for publishing
	 * @param topic the topic to publish to
	 * @param apiKey the api key (optional)
	 * @param apiSecret the api secret (optional)
	 * @param partitionId the partition key (optional, autogenerated if not provided)
	 * @param useHttps does connection use HTTPS?
	 * @param allowSelfSignedCerts are self-signed certificates allow
	 * 
	 * @throws IllegalArgumentException if invalid arguments are detected
	 */
	public InlineUebTopicSink(List<String> servers, 
								String topic, 
            					String apiKey, 
            					String apiSecret,
            					String partitionId,
            					boolean useHttps,
            					boolean allowSelfSignedCerts) {
		super(servers, topic, apiKey, apiSecret, partitionId, useHttps, allowSelfSignedCerts);
	}
	
	/**
	 * Instantiation of internal resources
	 */
	@Override
	public void init() {	
		
		this.publisher = 
				new BusPublisher.CambriaPublisherWrapper(this.servers, 
						                                 this.topic, 
						                                 this.apiKey, 
						                                 this.apiSecret,
						                                 this.useHttps);
		logger.info("{}: UEB SINK created", this);
	}
	
	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("InlineUebTopicSink [getTopicCommInfrastructure()=").append(getTopicCommInfrastructure())
				.append(", toString()=").append(super.toString()).append("]");
		return builder.toString();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CommInfrastructure getTopicCommInfrastructure() {
		return Topic.CommInfrastructure.UEB;
	}
}
